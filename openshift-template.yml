
parameters:
- name: JAEGER_SPANS_REPORTER_IMAGE
  description: "Jaeger spans reporter image"
  value: "jkandasa/jaegerspans-reporter:1.0.1"
- name: REPLICA_COUNT
  description: "Number of replicas to run"
  value: "5"
- name: MQTT_BROKER_HOST
  description: "MQTT broker hostnme or ip"
  value: "localhost"
- name: MQTT_BROKER_PORT
  description: "MQTT broker port"
  value: "1883"
- name: MQTT_BROKER_USER
  description: "MQTT broker user"
  value: "guest"
- name: MQTT_BROKER_PASSWORD
  description: "MQTT broker password"
  value: "guest"
- name: MY_REFERENCE
  description: "Reference of this reporter"
  value: "global"
- name: JAEGER_AGENT_IMAGE
  description: "Jaeger agent image"
  value: "jaegertracing/jaeger-agent:1.10"
- name: JA_LOG_LEVEL
  description: "Jaeger agent log level"
  value: "info"
- name: JA_METRIC_BACKEND
  description: "Jaeger agent metric backend"
  value: "prometheus"
- name: JAC_MAX_PACKET_SIZE
  description: "Jaeger agent compact max packet size"
  value: "65000"
- name: JAC_QUEUE_SIZE
  description: "Jaeger agent compact queue size"
  value: "1000"
- name: JAC_WORKERS
  description: "Jaeger agent compact workers"
  value: "10"
- name: JA_REPORTER_TYPE
  description: "Jaeger agent reporter type"
  value: "grpc"
- name: JAEGER_COLLECTOR_HOST_PORT
  description: "Jaeger collector host port"
  value: "jaeger-collector:14250"

apiVersion: v1
kind: Template
labels:
  app: jaegerqe-spansreporter
  group: jaeger-spans-reporter-tool
metadata:
  name: jaeger-spansreporter-template
  annotations:
    description: Jaeger Spans Reporter
    iconClass: icon-go-gopher
    openshift.io/display-name: Jaeger Spans Reporter
    tags: instant-app,jaegerqe-tools,spansreporter
  labels:
    app: jaegerqe-tools
    group: jaeger-spans-reporter-tool
objects:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: jaeger-spans-reporter-tool
    labels:
      app: jaegerqe-tools
      group: jaeger-spans-reporter-tool
  spec:
    replicas: "${REPLICA_COUNT}" 
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: jaegerqe-tools
          group: jaeger-spans-reporter-tool
          test-infra: test-pod
      spec:
        containers:
        - image: ${JAEGER_AGENT_IMAGE}
          imagePullPolicy: Always
          args: ["--log-level=${JA_LOG_LEVEL}",
                 "--metrics-backend=${JA_METRIC_BACKEND}",
                 "--processor.jaeger-compact.server-max-packet-size=${JAC_MAX_PACKET_SIZE}",
                 "--processor.jaeger-compact.server-queue-size=${JAC_QUEUE_SIZE}",
                 "--processor.jaeger-compact.workers=${JAC_WORKERS}",
                 "--reporter.type=${JA_REPORTER_TYPE}",
                 "--reporter.${JA_REPORTER_TYPE}.host-port=${JAEGER_COLLECTOR_HOST_PORT}"]
          name: jaeger-agent
          ports:
          - containerPort: 6831
            protocol: UDP
        - image: ${JAEGER_SPANS_REPORTER_IMAGE}
          imagePullPolicy: Always
          name: jaeger-spans-reporter-tool
          securityContext:
            privileged: false
          env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: BROKER_HOST
            value: "${MQTT_BROKER_HOST}"
          - name: BROKER_PORT
            value: "${MQTT_BROKER_PORT}"
          - name: BROKER_USER
            value: "${MQTT_BROKER_USER}"
          - name: BROKER_PASSWORD
            value: "${MQTT_BROKER_PASSWORD}"
          - name: REFERENCE
            value: "${MY_REFERENCE}"
